{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/GitHub/portfolio/src/components/Email.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nemailjs.init(\"user_6PEnWgQ1LFiBmJrspbPFv\");\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#02012e',\n    paddingBottom: \"5vh\"\n  },\n  contact: {\n    fontSize: \"3vw\"\n  },\n  input: {\n    width: \"60vw\"\n  },\n  message: {\n    width: \"60vw\",\n    height: \"10em\"\n  },\n  characters: {\n    fontSize: \"1.5vw\"\n  }\n}));\nexport default function Email() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = (data, r) => {\n    alert(`Thank you for your message from ${data.email}`);\n    const templateId = 'basic';\n    const serviceID = 'outlook';\n    sendFeedback(serviceID, templateId, {\n      from_name: data.name,\n      message_html: data.comment,\n      reply_to: data.email\n    });\n    r.target.reset();\n  };\n\n  const sendFeedback = (serviceID, templateId, variables) => {\n    window.emailjs.send(serviceID, templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }).catch(err => console.error('There has been an error.  Here some thoughts on the error that occured:', err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"text\",\n        name: \"user_name\",\n        maxLength: \"30\",\n        \"aria-invalid\": errors.user_name ? \"true\" : \"false\",\n        ...register(\"user_name\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), errors.name && errors.name.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"email\",\n        name: \"user_email\",\n        maxLength: \"40\",\n        \"aria-invalid\": errors.user_name ? \"true\" : \"false\",\n        ...register(\"user_email\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), errors.email && errors.email.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.message,\n        type: \"message\",\n        maxLength: \"1500\",\n        ...register(\"message\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), errors.comment && \"oops, you forgot your message!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Email, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/evan/Documents/GitHub/portfolio/src/components/Email.js"],"names":["React","makeStyles","useForm","emailjs","init","useStyles","theme","root","backgroundColor","paddingBottom","contact","fontSize","input","width","message","height","characters","Email","register","handleSubmit","errors","onSubmit","data","r","alert","email","templateId","serviceID","sendFeedback","from_name","name","message_html","comment","reply_to","target","reset","variables","window","send","then","res","console","log","catch","err","error","classes","user_name","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from 'emailjs-com'\nemailjs.init(\"user_6PEnWgQ1LFiBmJrspbPFv\");\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#02012e',\n        paddingBottom: \"5vh\",\n    },\n    contact: {\n        fontSize: \"3vw\",\n    },\n    input: {\n        width: \"60vw\",\n    },\n    message: {\n        width: \"60vw\",\n        height: \"10em\",\n    },\n    characters: {\n        fontSize: \"1.5vw\",\n    },\n})\n)\n\nexport default function Email() {\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = (data, r) => {\n        alert(`Thank you for your message from ${data.email}`);\n        const templateId = 'basic';\n        const serviceID = 'outlook';\n        sendFeedback(serviceID, templateId, { from_name: data.name, message_html: data.comment, reply_to: data.email })\n        r.target.reset();\n    }\n\n    const sendFeedback = (serviceID, templateId, variables) => {\n        window.emailjs.send(\n            serviceID, templateId,\n            variables\n        ).then(res => {\n            console.log('Email successfully sent!')\n        })\n            .catch(err => console.error('There has been an error.  Here some thoughts on the error that occured:', err))\n    }\n\n\n    return (\n        <div className=\"ContactForm\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input \n                    className={classes.input} \n                    type='text' \n                    name='user_name' \n                    maxLength='30'\n                    aria-invalid={errors.user_name ? \"true\" : \"false\"}\n                    {...register(\"user_name\", {\n                        required: \"Required\",\n                    })}\n                    placeholder='Name' />\n                <br />\n                {errors.name && errors.name.message}<br />\n                \n                <input \n                    className={classes.input} \n                    type='email' \n                    name='user_email' \n                    maxLength='40'\n                    aria-invalid={errors.user_name ? \"true\" : \"false\"}\n                    {...register(\"user_email\", {\n                        required: \"Required\",\n                    })}\n                    placeholder='Email' />\n                <br/>\n                {errors.email && errors.email.message}<br />\n\n                <textarea \n                    className={classes.message} \n                    type='message' \n                    maxLength='1500'\n                    {...register(\"message\", {\n                        required: \"Required\",\n                    })}\n                    placeholder='Message'/>\n                <br />\n                {errors.comment && \"oops, you forgot your message!\"}<br />\n\n                <input type=\"submit\" />\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
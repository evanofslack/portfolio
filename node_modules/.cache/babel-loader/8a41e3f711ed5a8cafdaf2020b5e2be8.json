{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/GitHub/portfolio/src/components/Email.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\nimport { init, sendForm } from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninit('user_6PEnWgQ1LFiBmJrspbPFv');\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#02012e',\n    paddingBottom: \"5vh\"\n  },\n  contact: {\n    fontSize: \"3vw\"\n  },\n  input: {\n    width: \"60vw\"\n  },\n  message: {\n    width: \"60vw\",\n    height: \"10em\"\n  },\n  characters: {\n    fontSize: \"1.5vw\"\n  }\n}));\n\nconst Contact = () => {\n  _s();\n\n  const [contactNumber, setContactNumber] = useState(\"000000\");\n\n  const generateContactNumber = () => {\n    const numStr = \"000000\" + (Math.random() * 1000000 | 0);\n    setContactNumber(numStr.substring(numStr.length - 6));\n  };\n};\n\n_s(Contact, \"4BgSp8tKJlGO8vqgkcp+8oZlz64=\");\n\n_c = Contact;\nexport default function Email() {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  sendForm('default_service', 'user_6PEnWgQ1LFiBmJrspbPFv', '#contact-form').then(function (response) {\n    console.log('SUCCESS!', response.status, response.text);\n  }, function (error) {\n    console.log('FAILED...', error);\n  });\n  const message = watch('message') || \"\";\n  const messageCharsLeft = 1500 - message.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Let's connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [errors.user_name && errors.user_name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Name is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"text\",\n        name: \"user_name\",\n        maxLength: \"30\",\n        \"aria-invalid\": errors.user_name ? \"true\" : \"false\",\n        ...register(\"user_name\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), errors.user_email && errors.user_email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Email is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"email\",\n        name: \"user_email\",\n        maxLength: \"40\",\n        \"aria-invalid\": errors.user_name ? \"true\" : \"false\",\n        ...register(\"user_email\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), errors.message && errors.message.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Message is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.message,\n        type: \"message\",\n        maxLength: \"1500\",\n        ...register(\"message\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.characters,\n        children: [\"Characters remaining: \", messageCharsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Email, \"sp28H3hwcgdhAIvwkZFGQ8GcMkI=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c2 = Email;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contact\");\n$RefreshReg$(_c2, \"Email\");","map":{"version":3,"sources":["/Users/evan/Documents/GitHub/portfolio/src/components/Email.js"],"names":["React","useState","makeStyles","useForm","init","sendForm","useStyles","theme","root","backgroundColor","paddingBottom","contact","fontSize","input","width","message","height","characters","Contact","contactNumber","setContactNumber","generateContactNumber","numStr","Math","random","substring","length","Email","classes","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","then","response","status","text","error","messageCharsLeft","user_name","type","required","user_email"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\nimport { init, sendForm } from 'emailjs-com';\ninit('user_6PEnWgQ1LFiBmJrspbPFv');\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#02012e',\n        paddingBottom: \"5vh\",\n    },\n    contact: {\n        fontSize: \"3vw\",\n    },\n    input: {\n        width: \"60vw\",\n    },\n    message: {\n        width: \"60vw\",\n        height: \"10em\",\n    },\n    characters: {\n        fontSize: \"1.5vw\",\n    },\n})\n)\n\nconst Contact = () => {\n    const [contactNumber, setContactNumber] = useState(\"000000\");\n    \n    const generateContactNumber = () => {\n      const numStr = \"000000\" + (Math.random() * 1000000 | 0);\n      setContactNumber(numStr.substring(numStr.length - 6));\n    }\n  }\n\nexport default function Email() {\n    const classes = useStyles();\n\n    const { register, handleSubmit, watch, formState: { errors }} = useForm();\n\n    const onSubmit = data => \n        console.log(data);\n        sendForm('default_service', 'user_6PEnWgQ1LFiBmJrspbPFv', '#contact-form')\n            .then(function(response) {\n            console.log('SUCCESS!', response.status, response.text);\n            }, function(error) {\n            console.log('FAILED...', error);\n            });\n\n    const message = watch('message') || \"\";\n    const messageCharsLeft = 1500 - message.length;\n    \n\n  return (\n    <div className={classes.contact}>\n        <h1>Let's connect</h1>\n        <form id='contact-form' onSubmit={handleSubmit(onSubmit)}>\n            {errors.user_name && errors.user_name.type === \"required\" && (\n            <div role=\"alert\">Name is required<br/></div>\n            )}\n            <input \n                className={classes.input} \n                type='text' \n                name='user_name' \n                maxLength='30'\n                aria-invalid={errors.user_name ? \"true\" : \"false\"}\n                {...register(\"user_name\", {\n                    required: \"Required\",\n                  })}\n                placeholder='Name' />\n            <br/>\n            {errors.user_email && errors.user_email.type === \"required\" && (\n            <div role=\"alert\">Email is required<br/></div>\n            )}\n            <input \n                className={classes.input} \n                type='email' \n                name='user_email' \n                maxLength='40'\n                aria-invalid={errors.user_name ? \"true\" : \"false\"}\n                {...register(\"user_email\", {\n                    required: \"Required\",\n                  })}\n                placeholder='Email' />\n            <br/>\n            {errors.message && errors.message.type === \"required\" && (\n            <div role=\"alert\">Message is required<br/></div>\n            )}\n            <textarea \n                className={classes.message} \n                type='message' \n                maxLength='1500'\n                {...register(\"message\", {\n                    required: \"Required\",\n                  })}\n                placeholder='Message'/>\n            <br/>\n            <p className={classes.characters}>Characters remaining: {messageCharsLeft}</p>\n            <input type='submit' value='Send' />\n        </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
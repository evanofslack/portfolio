{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/GitHub/portfolio/src/components/Email.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport emailjs from 'emailjs-com';\nimport Swal from 'sweetalert2';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: \"4vw\",\n    color: \"#02012e\"\n  },\n  input: {\n    width: \"60vw\"\n  },\n  message: {\n    width: \"60vw\",\n    height: \"10em\"\n  },\n  characters: {\n    fontSize: \"1.5vw\"\n  }\n}));\nexport default function Email() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n\n  function sendEmail(e) {\n    e.preventDefault();\n    emailjs.sendForm('outlook', 'basic', e.target, 'user_6PEnWgQ1LFiBmJrspbPFv').then(result => {\n      console.log(result.text);\n      Swal.fire({\n        title: 'Email Successfully Sent',\n        icon: 'success'\n      });\n    }, error => {\n      console.log(error.text);\n      Swal.fire({\n        title: 'Email Failed to Send',\n        icon: 'error'\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.title,\n    children: [\"Let's Connect\", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendEmail,\n      children: [errors.user_name && errors.user_name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Name is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"text\",\n        name: \"user_name\",\n        maxLength: \"10\",\n        \"aria-invalid\": errors.user ? \"true\" : \"false\",\n        ...register(\"user_name\", {\n          required: \"true\"\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Email is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        type: \"email\",\n        name: \"email\",\n        \"aria-invalid\": errors.email ? \"true\" : \"false\",\n        ...register(\"email\", {\n          required: \"true\"\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errors.message && errors.message.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Message is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.message,\n        name: \"message\",\n        \"aria-invalid\": errors.message ? \"true\" : \"false\",\n        ...register(\"message\", {\n          required: \"Required\"\n        }),\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Email, \"fRasynGQi9zz51RlrR0ZL+d4XU8=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/evan/Documents/GitHub/portfolio/src/components/Email.js"],"names":["React","emailjs","Swal","makeStyles","useForm","useStyles","theme","title","fontSize","color","input","width","message","height","characters","Email","classes","register","formState","errors","handleSubmit","sendEmail","e","preventDefault","sendForm","target","then","result","console","log","text","fire","icon","error","form","user_name","type","user","required","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport emailjs from 'emailjs-com';\nimport Swal from 'sweetalert2'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        fontSize: \"4vw\",\n        color: \"#02012e\",\n    },\n    input: {\n        width: \"60vw\",\n    },\n    message: {\n        width: \"60vw\",\n        height: \"10em\",\n    },\n    characters: {\n        fontSize: \"1.5vw\",\n    },\n})\n)\n\nexport default function Email() {\n    const classes = useStyles();\n    const { register, formState: { errors }, handleSubmit } = useForm();\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm('outlook', 'basic', e.target, 'user_6PEnWgQ1LFiBmJrspbPFv')\n      .then((result) => {\n          console.log(result.text);\n          Swal.fire({\n            title: 'Email Successfully Sent',\n            icon: 'success'\n          })\n      }, (error) => {\n          console.log(error.text);\n          Swal.fire({\n            title: 'Email Failed to Send',\n            icon: 'error'\n          })\n      });\n  }\n\n  return (\n    <div className={classes.title}>\n      Let's Connect\n      <form className={classes.form} onSubmit={sendEmail}>\n        {errors.user_name && errors.user_name.type === \"required\" && (\n        <div role=\"alert\">Name is required<br/></div>\n        )}\n        <input \n          className={classes.input} \n          type=\"text\" \n          name=\"user_name\" \n          maxLength='10'\n          aria-invalid={errors.user ? \"true\" : \"false\"}\n          {...register(\"user_name\", {\n              required: \"true\",\n            })}\n          placeholder='Name' />\n        <br/>\n\n        {errors.email && errors.email.type === \"required\" && (\n        <div role=\"alert\">Email is required<br/></div>\n        )}\n        <input \n          className={classes.input} \n          type=\"email\" \n          name=\"email\" \n          aria-invalid={errors.email ? \"true\" : \"false\"}\n          {...register(\"email\", {\n              required: \"true\",\n            })}\n          placeholder='Email' />\n\n        {errors.message && errors.message.type === \"required\" && (\n        <div role=\"alert\">Message is required<br/></div>\n        )}\n        <textarea \n            className={classes.message} \n            name=\"message\" \n            aria-invalid={errors.message ? \"true\" : \"false\"}\n            {...register(\"message\", {\n                required: \"Required\",\n              })}\n            placeholder='Message'/>\n      <input type=\"submit\" value=\"Send\" />\n        </form>\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}